import RPi.GPIO as GPIO
import time

# Relay pins setup (BCM mode)
relay1 = 17
relay2 = 18
limit_switch = 27  # Pin for limit switch

# Flags and states
brake_activated = False

def setup():
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(relay1, GPIO.OUT)
    GPIO.setup(relay2, GPIO.OUT)
    GPIO.setup(limit_switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)
    
    # Initialize relays as off (assuming active-low)
    GPIO.output(relay1, GPIO.HIGH)
    GPIO.output(relay2, GPIO.HIGH)

    print("System Initialized...")

def apply_brake():
    """Simulate applying and releasing the brake."""
    # Step 1: Apply brake (motor forward)
    GPIO.output(relay1, GPIO.LOW)
    GPIO.output(relay2, GPIO.HIGH)
    print("Motor Forward (Brake Applied)")
    time.sleep(2.5)  # Simulate actuator pressing brake

    # Step 2: Cut power and hold position
    GPIO.output(relay1, GPIO.HIGH)
    GPIO.output(relay2, GPIO.HIGH)
    print("Motor Power Off (Brake Held)")
    time.sleep(2)  # Hold brake for 2 seconds

    # Step 3: Release brake (motor reverse)
    GPIO.output(relay1, GPIO.HIGH)
    GPIO.output(relay2, GPIO.LOW)
    print("Motor Reverse (Brake Releasing)")

    # Step 4: Wait for limit switch or timeout
    start_time = time.time()
    while GPIO.input(limit_switch) == GPIO.HIGH:
        if time.time() - start_time > 3:  # Safety timeout
            print("⚠️ Timeout: Limit switch not triggered!")
            break

    # Step 5: Stop motor
    GPIO.output(relay1, GPIO.HIGH)
    GPIO.output(relay2, GPIO.HIGH)
    print("Motor Stopped (Brake Fully Released)")

def main():
    global brake_activated

    setup()

    try:
        while True:
            # Monitor the limit switch state
            if GPIO.input(limit_switch) == GPIO.LOW and not brake_activated:  # Limit switch triggered
                print("⚠️ Limit Switch Triggered! Emergency Brake Activated!")
                apply_brake()
                brake_activated = True
            elif GPIO.input(limit_switch) == GPIO.HIGH and brake_activated:  # Limit switch released
                brake_activated = False
                print("✅ Limit switch not triggered — Brake Released, System Reset")

            time.sleep(0.1)  # Small delay to avoid flooding CPU

    except KeyboardInterrupt:
        print("Exiting program.")
    finally:
        GPIO.cleanup()

if __name__ == "__main__":
    main()
